var C=Object.defineProperty;var R=(u,e,t)=>e in u?C(u,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):u[e]=t;var f=(u,e,t)=>(R(u,typeof e!="symbol"?e+"":e,t),t);import{g as w,v as p,f as S,i as g,c as x}from"./index-cc48b81a.js";import"./vendor-1ddf23d8.js";import"./utils-bc4001f4.js";class y{constructor(e,t,n,s){f(this,"classroom");f(this,"constraints");f(this,"availableSeats");f(this,"randomConfig");f(this,"placementHistory",[]);f(this,"diversityMap",new Map);f(this,"rng");this.classroom=e,this.constraints=t,this.availableSeats=w(e),this.randomConfig=this.createRandomConfig(n),this.rng=this.createSeededRandom(s),this.initializeDiversityMap()}async generatePlacement(e){console.log(`🎲 적응형 랜덤 휴리스틱 시작 (모드: ${this.randomConfig.mode})`);const t={},n=new Set;let s=[...e];const a=[{name:"제약조건 우선",weight:.8,randomness:.2},{name:"휴리스틱 기반",weight:.6,randomness:.4},{name:"적응형 탐색",weight:.4,randomness:.6},{name:"다양성 추구",weight:.2,randomness:.8}];for(const l of a){if(s.length===0)break;console.log(`📍 ${l.name} 단계 시작 (랜덤성: ${(l.randomness*100).toFixed(0)}%)`);const d={...this.randomConfig,studentSelectionRandomness:this.randomConfig.studentSelectionRandomness*l.randomness,seatSelectionRandomness:this.randomConfig.seatSelectionRandomness*l.randomness},h=await this.executePlacementPhase(s,t,d,l.name);Object.assign(t,h.newPlacements),h.placedStudentIds.forEach(m=>n.add(m)),s=s.filter(m=>!n.has(m.id)),console.log(`✅ ${l.name} 완료: ${h.placedStudentIds.length}명 배치`)}const r=p(t,e,this.classroom,this.constraints),o=this.createStats(t,e),i=this.calculateDiversityScore(t),c=this.generateResultMessage(o,i,this.randomConfig.mode);return{success:s.length===0,seating:t,message:c,violations:r.violations,stats:o}}async executePlacementPhase(e,t,n,s){const a={},r=[];let o=[...e];for(;o.length>0;){const i=this.selectNextStudent(o,t,n);if(!i)break;const c=this.evaluateSeatCandidates(i.student,t,a,n);if(c.length===0){o=o.filter(m=>m.id!==i.student.id);continue}const l=this.selectSeatWithRandomness(c,n),d={student:i.student,position:l.position,confidence:this.calculatePlacementConfidence(i,l),randomInfluence:this.calculateRandomInfluence(i,l,n),alternativeCount:c.length-1,reasoning:this.generatePlacementReasoning(i,l,n,s)},h=`${l.position.row}-${l.position.col}`;if(a[h]=i.student.id,r.push(i.student.id),o=o.filter(m=>m.id!==i.student.id),this.placementHistory.push(d),this.updateDiversityMap(l.position,i.student),n.mode==="exploratory"&&this.rng()<.1){console.log(`🎯 탐험적 조기 종료 (${s})`);break}}return{newPlacements:a,placedStudentIds:r}}selectNextStudent(e,t,n){if(e.length===0)return null;const s=e.map(a=>{const r=this.calculateStudentHeuristicScore(a,t),o=this.rng()*n.studentSelectionRandomness,i=this.calculateStudentDiversityBonus(a,t)*n.diversityBoost/100,c=r+o+i;return{student:a,baseScore:r,randomBonus:o,finalScore:c,selectionReason:this.generateStudentSelectionReason(r,o,i)}});if(this.rng()<n.explorationProbability/100){const a=s.sort((o,i)=>i.finalScore-o.finalScore).slice(0,Math.max(1,Math.ceil(s.length*.3))),r=Math.floor(this.rng()*a.length);return a[r]}else{const r=s.sort((l,d)=>d.finalScore-l.finalScore).slice(0,3),o=[.6,.3,.1],i=this.rng();let c=0;for(let l=0;l<r.length;l++)if(c+=o[l],i<=c)return r[l];return r[0]}}evaluateSeatCandidates(e,t,n,s){const a={...t,...n};return this.availableSeats.filter(i=>{const c=`${i.row}-${i.col}`;return!a[c]}).map(i=>{const c=this.evaluateConstraintScore(e,i,a),l=this.evaluateHeuristicScore(e,i,a),d=this.rng()*s.seatSelectionRandomness,h=this.evaluateSeatDiversityScore(i,e)*s.diversityBoost/100,m=this.evaluateRiskLevel(c,l),b=this.calculateFinalSeatScore(c,l,d,h,s);return{position:i,constraintScore:c,heuristicScore:l,randomFactor:d,diversityScore:h,finalScore:b,riskLevel:m}}).filter(i=>i.constraintScore>=0&&(s.mode==="chaos"||i.riskLevel!=="risky"))}selectSeatWithRandomness(e,t){if(e.length===1)return e[0];switch(t.mode){case"conservative":return this.selectConservatively(e);case"balanced":return this.selectBalanced(e,t);case"exploratory":return this.selectExploratory(e,t);case"chaos":return this.selectChaotic(e);default:return e[0]}}selectConservatively(e){const t=e.filter(n=>n.riskLevel==="safe");return t.length>0?t.reduce((n,s)=>s.constraintScore>n.constraintScore?s:n):e.reduce((n,s)=>s.finalScore>n.finalScore?s:n)}selectBalanced(e,t){const s=e.sort((c,l)=>l.finalScore-c.finalScore).slice(0,Math.max(1,Math.ceil(e.length*.5))),a=s.map((c,l)=>Math.exp(-l*.5)),r=a.reduce((c,l)=>c+l,0),o=this.rng()*r;let i=0;for(let c=0;c<s.length;c++)if(i+=a[c],o<=i)return s[c];return s[0]}selectExploratory(e,t){const a=e.map(o=>({...o,exploratoryScore:o.finalScore+o.diversityScore*2})).sort((o,i)=>i.exploratoryScore-o.exploratoryScore).slice(0,Math.ceil(e.length*.7)),r=Math.floor(this.rng()*a.length);return a[r]}selectChaotic(e){const t=Math.floor(this.rng()*e.length);return e[t]}createRandomConfig(e){return{...{mode:"balanced",studentSelectionRandomness:30,seatSelectionRandomness:25,constraintFlexibility:10,diversityBoost:40,explorationProbability:20},...e}}createSeededRandom(e){let t=e||Date.now()%2147483647;return()=>(t=t*16807%2147483647,(t-1)/2147483646)}initializeDiversityMap(){this.availableSeats.forEach(e=>{const t=`${e.row}-${e.col}`;this.diversityMap.set(t,0)})}calculateStudentHeuristicScore(e,t){let n=50;const s=this.getStudentConstraintCount(e.id);n+=s*15;const a=this.calculateGenderBalance(t);return e.gender==="male"&&a.maleRatio<.4&&(n+=10),e.gender==="female"&&a.femaleRatio<.4&&(n+=10),Math.max(0,Math.min(100,n))}calculateStudentDiversityBonus(e,t){let n=0;return Object.values(t).map(r=>"unknown").filter(r=>r===e.gender).length<Object.keys(t).length*.4&&(n+=20),n}evaluateConstraintScore(e,t,n){var o,i;let s=100;const a=(o=this.classroom.seatGenderConstraints)==null?void 0:o.find(c=>c.position.row===t.row&&c.position.col===t.col);return a!=null&&a.requiredGender&&e.gender!==a.requiredGender||((i=this.classroom.seatUsageConstraints)==null?void 0:i.find(c=>c.position.row===t.row&&c.position.col===t.col&&c.isDisabled))?-100:(s-=this.evaluatePairConstraintViolations(e,t,n)*30,s-=this.evaluateDistanceConstraintViolations(e,t,n)*25,Math.max(-100,Math.min(100,s)))}evaluateHeuristicScore(e,t,n){let s=50;const a=(this.classroom.rows-1)/2,r=(this.classroom.cols-1)/2,o=Math.abs(t.row-a)+Math.abs(t.col-r);s+=Math.max(0,20-o*2),this.countNearbyGender(e.gender,t,n)>2&&(s-=15);const c=this.countNearbyEmptySeats(t,n);return s+=c*3,Math.max(0,Math.min(100,s))}evaluateSeatDiversityScore(e,t){const n=`${e.row}-${e.col}`,s=this.diversityMap.get(n)||0;return Math.max(0,100-s*10)}evaluateRiskLevel(e,t){const n=e+t;return e<0?"risky":n>120?"safe":n>80?"moderate":"risky"}calculateFinalSeatScore(e,t,n,s,a){let r=.5,o=.3,i=.1,c=.1;switch(a.mode){case"conservative":r=.7,o=.2,i=.05,c=.05;break;case"balanced":r=.4,o=.3,i=.15,c=.15;break;case"exploratory":r=.3,o=.2,i=.25,c=.25;break;case"chaos":r=.2,o=.1,i=.5,c=.2;break}return e*r+t*o+n*i+s*c}getStudentConstraintCount(e){return this.constraints.pairRequired.filter(t=>t.students.includes(e)).length+this.constraints.pairProhibited.filter(t=>t.students.includes(e)).length+this.constraints.distanceRules.filter(t=>t.students.includes(e)).length}calculateGenderBalance(e){return Object.keys(e).length===0?{maleRatio:.5,femaleRatio:.5}:{maleRatio:.5,femaleRatio:.5}}evaluatePairConstraintViolations(e,t,n){let s=0;return this.constraints.pairRequired.forEach(a=>{if(a.students.includes(e.id)){const r=a.students.find(o=>o!==e.id);if(r){const o=S(r,n);o&&!g(t,o)&&s++}}}),this.constraints.pairProhibited.forEach(a=>{if(a.students.includes(e.id)){const r=a.students.find(o=>o!==e.id);if(r){const o=S(r,n);o&&g(t,o)&&s++}}}),s}evaluateDistanceConstraintViolations(e,t,n){let s=0;return this.constraints.distanceRules.forEach(a=>{if(a.students.includes(e.id)){const r=a.students.find(o=>o!==e.id);if(r){const o=S(r,n);o&&x(t,o)<a.minDistance&&s++}}}),s}countNearbyGender(e,t,n){let s=0;return[{row:t.row-1,col:t.col-1},{row:t.row-1,col:t.col},{row:t.row-1,col:t.col+1},{row:t.row,col:t.col-1},{row:t.row,col:t.col+1},{row:t.row+1,col:t.col-1},{row:t.row+1,col:t.col},{row:t.row+1,col:t.col+1}].forEach(r=>{if(r.row>=0&&r.row<this.classroom.rows&&r.col>=0&&r.col<this.classroom.cols){const o=`${r.row}-${r.col}`;n[o]}}),s}countNearbyEmptySeats(e,t){let n=0;return[{row:e.row-1,col:e.col-1},{row:e.row-1,col:e.col},{row:e.row-1,col:e.col+1},{row:e.row,col:e.col-1},{row:e.row,col:e.col+1},{row:e.row+1,col:e.col-1},{row:e.row+1,col:e.col},{row:e.row+1,col:e.col+1}].forEach(a=>{if(a.row>=0&&a.row<this.classroom.rows&&a.col>=0&&a.col<this.classroom.cols){const r=`${a.row}-${a.col}`;t[r]||n++}}),n}calculatePlacementConfidence(e,t){const n=Math.max(0,Math.min(100,t.constraintScore)),s=Math.min(20,t.finalScore*.1);return Math.max(0,Math.min(100,n-s))}calculateRandomInfluence(e,t,n){const s=t.constraintScore+t.heuristicScore+t.randomFactor+t.diversityScore;return s<=0?0:t.randomFactor/s*100}generatePlacementReasoning(e,t,n,s){const a=[];return a.push(`${s} 단계에서 선택`),t.constraintScore>50?a.push("제약조건 만족"):t.constraintScore>0&&a.push("제약조건 부분 만족"),t.heuristicScore>60&&a.push("휴리스틱 점수 우수"),t.randomFactor>n.seatSelectionRandomness*.7&&a.push("랜덤성으로 선택"),t.diversityScore>70&&a.push("다양성 증진"),a.push(`위험도: ${t.riskLevel}`),a}generateStudentSelectionReason(e,t,n){const s=[];return e>70&&s.push("높은 우선순위"),t>20&&s.push("랜덤 선택"),n>15&&s.push("다양성 기여"),s.join(", ")||"기본 선택"}updateDiversityMap(e,t){const n=`${e.row}-${e.col}`,s=this.diversityMap.get(n)||0;this.diversityMap.set(n,s+1),[{row:e.row-1,col:e.col},{row:e.row+1,col:e.col},{row:e.row,col:e.col-1},{row:e.row,col:e.col+1}].forEach(r=>{if(r.row>=0&&r.row<this.classroom.rows&&r.col>=0&&r.col<this.classroom.cols){const o=`${r.row}-${r.col}`,i=this.diversityMap.get(o)||0;this.diversityMap.set(o,i+.5)}})}calculateDiversityScore(e){if(Object.keys(e).length===0)return 0;let t=0,n=0;return this.diversityMap.forEach((s,a)=>{e[a]&&(t+=s,n++)}),n>0?t/n:0}createStats(e,t){const n=this.classroom.rows*this.classroom.cols,s=Object.keys(e).length;return{totalSeats:n,availableSeats:this.availableSeats.length,disabledSeats:n-this.availableSeats.length,placedStudents:s,unplacedStudents:t.length-s,constraintViolations:0}}generateResultMessage(e,t,n){const s=e.placedStudents>0?(e.placedStudents/(e.placedStudents+e.unplacedStudents)*100).toFixed(1):"0";let o=`${{conservative:"안정적",balanced:"균형잡힌",exploratory:"탐험적",chaos:"창의적"}[n]||n} 랜덤 휴리스틱 배치: ${e.placedStudents}/${e.placedStudents+e.unplacedStudents}명 배치 (${s}%)`;t>0&&(o+=` | 다양성 점수: ${t.toFixed(1)}`);const i=this.placementHistory.filter(c=>c.randomInfluence>30).length;return i>0&&(o+=` | 랜덤 결정: ${i}건`),o}getPlacementAnalysis(){const e=this.placementHistory.length;if(e===0)return{totalDecisions:0,averageConfidence:0,averageRandomInfluence:0,riskDistribution:{safe:0,moderate:0,risky:0},phaseBreakdown:{}};const t=this.placementHistory.reduce((r,o)=>r+o.confidence,0),n=this.placementHistory.reduce((r,o)=>r+o.randomInfluence,0),s={safe:0,moderate:0,risky:0},a={};return this.placementHistory.forEach(r=>{r.confidence>70?s.safe++:r.confidence>40?s.moderate++:s.risky++;const o=r.reasoning[0]||"unknown";a[o]=(a[o]||0)+1}),{totalDecisions:e,averageConfidence:t/e,averageRandomInfluence:n/e,riskDistribution:s,phaseBreakdown:a}}async generateAlternativePlacement(e,t){return this.rng=this.createSeededRandom(t||Date.now()),this.placementHistory=[],this.initializeDiversityMap(),await this.generatePlacement(e)}}const v={subtle:{mode:"conservative",studentSelectionRandomness:15,seatSelectionRandomness:10,constraintFlexibility:5,diversityBoost:20,explorationProbability:10},balanced:{mode:"balanced",studentSelectionRandomness:30,seatSelectionRandomness:25,constraintFlexibility:10,diversityBoost:40,explorationProbability:20},creative:{mode:"exploratory",studentSelectionRandomness:50,seatSelectionRandomness:45,constraintFlexibility:20,diversityBoost:60,explorationProbability:35},wild:{mode:"chaos",studentSelectionRandomness:80,seatSelectionRandomness:75,constraintFlexibility:40,diversityBoost:30,explorationProbability:60}},D=async(u,e,t={pairRequired:[],pairProhibited:[],distanceRules:[],rowExclusions:[]},n={})=>{if(u.length===0)return{success:!1,seating:{},message:"배치할 학생이 없습니다.",stats:{totalSeats:e.rows*e.cols,availableSeats:w(e).length,disabledSeats:0,placedStudents:0,unplacedStudents:0,constraintViolations:0}};let s;if(n.preset?s={...v[n.preset],...n.customConfig}:s={...v.balanced,...n.customConfig},n.generateMultiple&&n.generateMultiple>1){console.log(`🎲 ${n.generateMultiple}개의 배치 후보 생성 중...`);const o=[];for(let c=0;c<n.generateMultiple;c++){const d=await new y(e,t,s,n.seed?n.seed+c:void 0).generatePlacement(u);o.push({...d,message:`${d.message} (후보 ${c+1}/${n.generateMultiple})`})}const i=o.reduce((c,l)=>{const d=c.stats.placedStudents*100-c.stats.constraintViolations*10;return l.stats.placedStudents*100-l.stats.constraintViolations*10>d?l:c});return i.message+=" | 최적 선택됨",i}return await new y(e,t,s,n.seed).generatePlacement(u)};export{y as AdaptiveRandomHeuristicEngine,v as RANDOMNESS_PRESETS,D as generateAdaptiveRandomPlacement};
